# Application-wide
hadoop.url=hdfs://visallo-dev:8020
zookeeper.serverNames=visallo-dev
dfs.client.use.datanode.hostname=true

# webAppEmbedded.longRunningProcessRunner.enabled=true
# webAppEmbedded.longRunningProcessRunner.threadCount=1
# webAppEmbedded.graphPropertyWorkerRunner.enabled=true
# webAppEmbedded.graphPropertyWorkerRunner.threadCount=1
# webAppEmbedded.externalResourceRunner.enabled=true

# hdfsLib.sourceDirectory=hdfs://visallo-dev/visallo/lib

newuser.privileges=READ,COMMENT,EDIT,PUBLISH,ADMIN

web.cacheServletFilter.maxAge=3600

# "CONFIDENTIAL" to require HTTPS to access the web application (default)
# http.transportGuarantee=CONFIDENTIAL

# web.ui defaults defined in web/web-base/src/main/java/org/visallo/web/WebConfiguration.java

# Repository
simpleOrmSession=com.v5analytics.simpleorm.AccumuloSimpleOrmSession
repository.user=org.visallo.vertexium.model.user.VertexiumUserRepository
repository.workspace=org.visallo.vertexium.model.workspace.VertexiumWorkspaceRepository
repository.longRunningProcess=org.visallo.vertexium.model.longRunningProcess.VertexiumLongRunningProcessRepository
repository.authorization=org.visallo.vertexium.model.user.AccumuloAuthorizationRepository
repository.ontology=org.visallo.vertexium.model.ontology.VertexiumOntologyRepository
repository.audit=org.visallo.core.model.audit.SimpleOrmAuditRepository
repository.workQueue=org.visallo.model.rabbitmq.RabbitMQWorkQueueRepository
rabbitmq.addr.0.host=visallo-dev
#repository.http=org.visallo.core.http.HttpRepository

# Configurable max prefetch count and size, 0 is unlimited
#rabbitmq.prefetch.count=10

# Configurable rabbitmq prefix
#queue.prefix

# Configurable path prefix for lock repository
#lockRepository.pathPrefix=/visallo/locks

# Visibility Plugin
security.visibilityTranslator=org.visallo.core.security.DirectVisibilityTranslator
audit.visibilityLabel=audit

# Default Search Result Count
#search.defaultResultCount

# Simple ORM: Accumulo specific
simpleOrm.accumulo.instanceName=visallo
simpleOrm.accumulo.zookeeperServerNames=visallo-dev
simpleOrm.accumulo.username=root
simpleOrm.accumulo.password=password
simpleOrm.tablePrefix=visallo_

# Vertexium
graph=org.vertexium.accumulo.AccumuloGraph
# TODO when server side element visibility is fix remove this line
graph.useServerSideElementVisibilityRowFilter=false
graph.accumuloInstanceName=visallo
graph.username=root
graph.password=password
graph.tableNamePrefix=visallo_vertexium
graph.zookeeperServers=visallo-dev
graph.serializer=org.vertexium.accumulo.serializer.JavaValueSerializer
graph.idgenerator=org.vertexium.id.UUIDIdGenerator
graph.search=org.vertexium.elasticsearch.ElasticSearchParentChildSearchIndex
graph.search.locations=visallo-dev
graph.search.indexName=vertexium
graph.hdfs.rootDir=hdfs://visallo-dev
graph.hdfs.dataDir=/visallo/vertexium

# Object-detection
objectdetection.classifierConcepts=face
objectdetection.classifier.face.path=/visallo/config/opencv/haarcascade_frontalface_alt.xml

# Term extraction
termextraction.opennlp.pathPrefix=/visallo/config/opennlp/

# org.visallo.geoip.GeoIpGraphPropertyWorker.pathPrefix=/visallo/config/org.visallo.geoip.GeoIpGraphPropertyWorker/

org.visallo.mimeTypeOntologyMapper.MimeTypeOntologyMapperGraphPropertyWorker.mapping.image.regex=image.*
org.visallo.mimeTypeOntologyMapper.MimeTypeOntologyMapperGraphPropertyWorker.mapping.image.intent=image
org.visallo.mimeTypeOntologyMapper.MimeTypeOntologyMapperGraphPropertyWorker.mapping.audio.regex=audio.*
org.visallo.mimeTypeOntologyMapper.MimeTypeOntologyMapperGraphPropertyWorker.mapping.audio.intent=audio
org.visallo.mimeTypeOntologyMapper.MimeTypeOntologyMapperGraphPropertyWorker.mapping.video.regex=video.*
org.visallo.mimeTypeOntologyMapper.MimeTypeOntologyMapperGraphPropertyWorker.mapping.video.intent=video
org.visallo.mimeTypeOntologyMapper.MimeTypeOntologyMapperGraphPropertyWorker.mapping.default.intent=document
